name: Python CI/CD

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: self-hosted
    strategy:
      matrix:
        python-version: ['3.9']
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          fi
          pip install pytest
      
      - name: Run tests
        run: |
          if [ -d "tests" ]; then
            python -m pytest tests/ -v
          else
            echo "::warning::No tests directory found"
            exit 0
          fi

  deploy:
    runs-on: self-hosted
    needs: test
    if: success()  # Only run if test job succeeds
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl enable --now docker
          sudo usermod -aG docker $USER
          # Note: newgrp doesn't work in scripts - may need to handle differently
          # Consider logging out/in or using sudo -u $USER docker commands
      
      - name: Verify Docker installation
        run: docker --version
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/python-app:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/python-app:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
