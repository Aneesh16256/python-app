name: Python CI/CD

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: self-hosted
    strategy:
      matrix:
        python-version: ['3.9']
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          fi
          pip install pytest
      
      - name: Run tests
        run: |
          if [ -d "tests" ]; then
            python -m pytest tests/ -v
          else
            echo "::warning::No tests directory found"
            exit 0
          fi

  deploy:
    runs-on: self-hosted
    needs: test
    if: success()
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Docker
        run: |
          # Check if Docker is already installed
          if ! command -v docker &> /dev/null; then
            echo "Installing Docker..."
            sudo apt-get update
            sudo apt-get install -y \
                ca-certificates \
                curl \
                gnupg \
                lsb-release
            sudo mkdir -p /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
              $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin
          else
            echo "Docker is already installed"
          fi
          
          # Configure Docker permissions
          sudo usermod -aG docker $USER
          sudo chmod 666 /var/run/docker.sock
          sudo systemctl enable --now docker
          
          # Verify installation
          docker --version
          docker buildx version
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Set up Docker Buildx
        run: |
          docker buildx create --use --name mybuilder || true
          docker buildx inspect --bootstrap
          docker buildx ls
      
      - name: Build and push Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/python-app:latest \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/python-app:${{ github.sha }} \
            --push .
